{"version":3,"sources":["services/blogs.js","components/Blog.js","services/login.js","components/Notification.js","components/LoginForm.js","components/BlogForm.js","components/Togglable.js","App.js","index.js"],"names":["baseUrl","token","data","getAll","axios","get","then","response","setToken","newToken","create","newObject","a","config","headers","Authorization","post","update","id","updatedObject","put","deleteBlog","delete","Blog","blog","blogs","setBlogs","blogStyle","paddingTop","paddingLeft","border","borderWidth","marginBottom","useState","flag","setFlag","style","className","title","onClick","url","likes","event","foundBlog","find","b","undefined","updatedBlog","blogService","returnedBlog","map","sort","updateLikeCount","author","name","window","confirm","filter","p","login","credentials","Notification","message","errorState","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","username","password","onSubmit","value","onChange","type","BlogForm","createBlog","setTitle","setAuthor","setUrl","preventDefault","target","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","displayName","App","setUsername","setPassword","setMessage","setErrorState","user","setUser","blogFormRef","useRef","useEffect","loggedUserJSON","localStorage","getItem","JSON","parse","handleLogin","loginService","setItem","stringify","setTimeout","addBlog","blogObject","current","concat","removeItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dbee6705.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = (id, updatedObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, updatedObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deleteBlog = id => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const request = axios.delete(`${baseUrl}/${id}`, config)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst data =  { getAll, setToken, create, update, deleteBlog }\r\nexport default data","import React, { useState } from 'react'\nimport blogService from '../services/blogs'\n\nconst Blog = ({ blog, blogs, setBlogs }) => {\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  }\n\n  const [flag, setFlag] = useState(false)\n  const showDetails = () => setFlag(true)\n  const hideDetails = () => setFlag(false)\n\n  const updateLikeCount = (event, id) => {\n    const foundBlog = blogs.find(b => b.id === id)\n    if (foundBlog.likes === undefined)\n      foundBlog.likes = 0\n    const updatedBlog = { ...foundBlog, likes: foundBlog.likes + 1 }\n\n    blogService.update(id, updatedBlog).then(returnedBlog => {\n      setBlogs(blogs.map(b => b.id !== id ? b : returnedBlog).sort((a, b) => b.likes - a.likes))\n    })\n\n  }\n\n  const removeBlog = (event, id, name, author) => {\n    if (window.confirm(`Remove blog ${name} by ${author}?`)) {\n      blogService.deleteBlog(id).then(() => {\n        setBlogs(blogs.filter(p => p.id !== id).sort((a, b) => b.likes - a.likes))\n      })\n    }\n  }\n\n  if (!flag) {\n    return (\n      <div style={blogStyle} className=\"blog-default\">\n        <div className=\"blog\">\n          {blog.title} {blog.author} &nbsp; <button onClick={showDetails}>view</button>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div style={blogStyle}>\n        <div><span className=\"blog-title\">{blog.title}</span> &nbsp; <button onClick={hideDetails}>hide</button></div>\n        <div className=\"blog-url\">{blog.url}</div>\n        <div><span className=\"blog-likes\">{blog.likes}</span>&nbsp; <button onClick={(event) => updateLikeCount(event, blog.id)}>like</button></div>\n        <div className=\"blog-author\">{blog.author}</div>\n        <button onClick={(event) => removeBlog(event, blog.id, blog.title, blog.author)}>remove</button>\n      </div>\n    )\n  }\n\n}\n\nexport default Blog","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nconst data = { login }\r\nexport default data","import React from 'react'\r\n\r\nconst Notification = ({ message, errorState }) => {\r\n  if (message === null) {\r\n    return null\r\n  } else if (errorState === 'error') {\r\n    return (\r\n      <>\r\n        <div className=\"error\">{message}</div>\r\n      </>\r\n    )\r\n  } else if (errorState === 'success') {\r\n    return (\r\n      <>\r\n        <div className=\"success\">{message}</div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst LoginForm = ({\r\n  handleSubmit,\r\n  handleUsernameChange,\r\n  handlePasswordChange,\r\n  username,\r\n  password\r\n}) => {\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          username\r\n          <input\r\n            value={username}\r\n            onChange={handleUsernameChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          password\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">login</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nLoginForm.propTypes = {\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  handleUsernameChange: PropTypes.func.isRequired,\r\n  handlePasswordChange: PropTypes.func.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n  password: PropTypes.string.isRequired\r\n}\r\n\r\nexport default LoginForm","import React, { useState } from 'react'\r\n\r\nconst BlogForm = ({ createBlog }) => {\r\n  const [title, setTitle] = useState('')\r\n  const [author, setAuthor] = useState('')\r\n  const [url, setUrl] = useState('')\r\n\r\n\r\n  const handleTitleChange = event => setTitle(event.target.value)\r\n  const handleAuthorChange = event => setAuthor(event.target.value)\r\n  const handleUrlChange = event => setUrl(event.target.value)\r\n\r\n\r\n  const addBlog = (event) => {\r\n    event.preventDefault()\r\n    createBlog({\r\n      title: title,\r\n      author: author,\r\n      url: url\r\n    })\r\n\r\n    setAuthor('')\r\n    setUrl('')\r\n    setTitle('')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Create a new blog</h2>\r\n\r\n      <form onSubmit={addBlog}>\r\n        <label>\r\n          Title\r\n          <input\r\n            value={title}\r\n            onChange={handleTitleChange}\r\n          />\r\n        </label>\r\n        <br/>\r\n        <label>\r\n          Author\r\n          <input\r\n            value={author}\r\n            onChange={handleAuthorChange}\r\n          />\r\n        </label>\r\n        <br/>\r\n        <label>\r\n          Url\r\n          <input\r\n            value={url}\r\n            onChange={handleUrlChange}\r\n          />\r\n        </label>\r\n        <br/>\r\n        <button type=\"submit\">save</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogForm","import React, { useState, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {props.children}\r\n        <button onClick={toggleVisibility}>cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired\r\n}\r\n\r\nTogglable.displayName = 'Togglable'\r\n\r\nexport default Togglable","import React, { useState, useEffect, useRef } from 'react'\r\nimport Blog from './components/Blog'\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login'\r\nimport Notification from './components/Notification'\r\nimport './index.css'\r\nimport LoginForm from './components/LoginForm'\r\nimport BlogForm from './components/BlogForm'\r\nimport Togglable from './components/Togglable'\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([])\r\n\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const [errorState, setErrorState] = useState('success')\r\n\r\n  const [user, setUser] = useState(null)\r\n\r\n  const blogFormRef = useRef()\r\n\r\n  useEffect(() => {\r\n    blogService.getAll().then(blogs =>\r\n      setBlogs(blogs)\r\n    )\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      blogService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const user = await loginService.login({\r\n        username, password,\r\n      })\r\n\r\n      window.localStorage.setItem(\r\n        'loggedBlogAppUser', JSON.stringify(user)\r\n      )\r\n\r\n      setUser(user)\r\n      setUsername('')\r\n      setPassword('')\r\n    } catch (exception) {\r\n      setMessage('Wrong credentials')\r\n      setErrorState('error')\r\n      setTimeout(() => {\r\n        setErrorState('success')\r\n        setMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const logout = () => {\r\n    window.localStorage.removeItem('loggedBlogAppUser')\r\n    setUser(null)\r\n  }\r\n\r\n  const addBlog = (blogObject) => {\r\n    blogFormRef.current.toggleVisibility()\r\n    blogService\r\n      .create(blogObject)\r\n      .then(returnedBlog => {\r\n        setBlogs(blogs.concat(returnedBlog))\r\n        setErrorState('success')\r\n        setMessage(`A new Blog ${returnedBlog.title} was added by ${returnedBlog.author}`)\r\n        setTimeout(() => {\r\n          setMessage(null)\r\n          setErrorState('success')\r\n        }, 5000)\r\n      })\r\n  }\r\n\r\n  const loginForm = () => (\r\n    <Togglable buttonLabel=\"log in\">\r\n      <LoginForm\r\n        username={username}\r\n        password={password}\r\n        handleUsernameChange={({ target }) => setUsername(target.value)}\r\n        handlePasswordChange={({ target }) => setPassword(target.value)}\r\n        handleSubmit = {handleLogin}\r\n      />\r\n    </Togglable>\r\n  )\r\n\r\n  const blogForm = () => (\r\n    <Togglable buttonLabel=\"new blog\" ref={blogFormRef}>\r\n      <BlogForm createBlog={addBlog} />\r\n    </Togglable>\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <h1>blogs</h1>\r\n      <Notification message={message} errorState={errorState}/>\r\n      {user === null ?\r\n        loginForm():\r\n        <div>\r\n          <p>{user.name} logged in</p>\r\n          <button onClick={() => logout()}>Log out</button>\r\n          {blogForm()}\r\n        </div>\r\n      }\r\n      <div>\r\n        {\r\n          blogs.map(blog => <Blog key={blog.id} blog={blog} blogs={blogs} setBlogs={setBlogs}/>)\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}